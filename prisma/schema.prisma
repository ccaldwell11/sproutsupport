generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
    id Int @id @default(autoincrement())
    google_id String @unique
    location_id Int?
    userName String?
    email String? @unique
    password String?
    avatar String?
    bio String?
    level Int @default(1)
    points Int @default(0)
    meets Meet[]
    notifications Notification[]
    plants Plant[]
    posts Post[]
    // comments Comment[]
    attendees Attendee[]
}

model Image {
  id       Int    @id @default(autoincrement())
  url      String
  category String
}

model Meet {
  id          Int        @id @default(autoincrement())
  time_date   String
  location    String
  eventName   String
  description String
  imageUrl    String
  userId      Int
  attendees   Attendee[]
  owner       User       @relation(fields: [userId], references: [id])

  @@index([userId], map: "Meet_userId_fkey")
}

model Notification {
  id        Int    @id @default(autoincrement())
  userId    Int
  message   String
  recipient User   @relation(fields: [userId], references: [id])

  @@index([userId], map: "Notification_userId_fkey")
}

model Plant {
  id          Int     @id @default(autoincrement())
  userId      Int
  plantAPIID  Int?
  species     String?
  commonName  String?
  nickname    String?
  location    String?
  imageUrl    String?
  description String?
  caregiver   User    @relation(fields: [userId], references: [id])
  tasks       Task[]

  @@index([userId], map: "Plant_userId_fkey")
}

model Task {
  id              Int       @id @default(autoincrement())
  taskName        String?
  frequency       String?
  lastCompleted   DateTime?
  nextComplection DateTime?
  plant_id        Int?
  overdue         Boolean?
  taskPlant       Plant?    @relation(fields: [plant_id], references: [id])

  @@index([plant_id], map: "Task_plant_id_fkey")
}

model Post {
  id       Int    @id @default(autoincrement())
  userId   Int
  message  String
  imageUrl String?
  owner    User   @relation(fields: [userId], references: [id])
  // postImg   Image   @relation(fields: [imageId], references: [id])
  // @@index([imageId], map: "Post_imageId_fkey")

  @@index([userId], map: "Post_userId_fkey")
}

model Comment {
  id Int @id @default(autoincrement())
}

model Attendee {
  id          Int  @id @default(autoincrement())
  meet_id     Int
  userId      Int
  meet        Meet @relation(fields: [meet_id], references: [id])
  participant User @relation(fields: [userId], references: [id])

  @@index([meet_id], map: "Attendee_meet_id_fkey")
  @@index([userId], map: "Attendee_userId_fkey")
}
